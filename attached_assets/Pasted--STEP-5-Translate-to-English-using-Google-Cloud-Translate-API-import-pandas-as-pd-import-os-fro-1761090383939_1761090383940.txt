# STEP 5: Translate to English using Google Cloud Translate API
import pandas as pd
import os
from google.cloud import translate_v2 as translate
import html

# Read CSV
csv_file = "input.csv"
df = pd.read_csv(csv_file)

# Take first row (or loop later if needed)
folder_path = df.loc[0, "Folder Path"]

# Build input/output paths
INPUT_TXT  = os.path.join(folder_path, "final_transcript.txt")
OUTPUT_TXT = os.path.join(folder_path, "transcript_english.txt")

# STEP 2: Init Translation Client
translate_client = translate.Client()

print("⏳ Reading TXT file...")

# STEP 4: Load TXT
with open(INPUT_TXT, "r", encoding="utf-8") as f:
    lines = f.readlines()

print(f"Total lines to translate: {len(lines)}")

# STEP 5: Translate each line
translated_lines = []
for i, raw_line in enumerate(lines):
    orig = raw_line.rstrip("\n")
    if not orig.strip():
        translated_lines.append("")  # keep blank lines
        print(f"Line {i+1}: ⏭ blank")
        continue

    # Unescape any HTML entities already present in the source line
    line = html.unescape(orig).strip()

    # Detect speaker/timestamp prefix if present
    if "|" in line:
        prefix, text = line.split("|", 1)
        text = text.strip()
        if text:
            result = translate_client.translate(
                text,
                source_language="hi",
                target_language="en",
                format_="text"
            )
            eng = html.unescape(result["translatedText"])
            translated_line = f"{prefix} | {eng}"
        else:
            translated_line = line
    else:
        result = translate_client.translate(
            line,
            source_language="hi",
            target_language="en",
            format_="text"
        )
        eng = html.unescape(result["translatedText"])
        translated_line = eng

    translated_lines.append(translated_line)
    print(f"Line {i+1}: ✅")

# STEP 6: Save translated TXT
with open(OUTPUT_TXT, "w", encoding="utf-8") as f:
    for line in translated_lines:
        f.write(line + "\n")

print(f"\n💾 Translated TXT saved as {OUTPUT_TXT}")

# STEP 7: Optional preview
print("\n📑 Preview of Translated TXT (first 10 lines):\n")
for line in translated_lines[:10]:
    print(line)
